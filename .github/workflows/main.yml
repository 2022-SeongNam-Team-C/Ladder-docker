name: CI

on:
  push:
    branches:
      - feature_CICD
  pull_request:
    branches:
      - feature_CICD

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code. # Repo checkout
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Check Node v # Node v 확인
        run: node -v
      - name: Create Prod Config
        run: |
          touch .env
          echo "$PROD_ENV" > .env
        env:
          PROD_ENV: ${{ secrets.PROD_ENV }}
      - name: Install Dependencies # AI 레포지토리 의존 파일 설치
        working-directory: ./Ladder-AI
        run: pip install -r requirements.txt
      - name: Install Dependencies # 백엔드 레포지토리 의존 파일 설치
        working-directory: ./Ladder-Backend
        run: pip install -r requirements.txt
      - name: Install Dependencies  # 프론트엔드 레포지토리 의존 파일 설치
        working-directory: ./Ladder-Frontend
        run: yarn install
      - name: zip create  # 압축
        run: zip -qq -r ./build-docker.zip .
        shell: bash
      - name: Configure AWS credentials #AWS S3 설정
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Upload to S3 # S3 업로드
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws s3 cp --region ap-northeast-2 ./build-docker.zip s3://teamcc-bucket/Deploy_CICD/build-docker.zip 

      - name: Deploy # EC2 서버에 코드 디플로이 배포
        run: aws deploy create-deployment
          --application-name LadderDocker
          --deployment-config-name CodeDeployDefault.AllAtOnce
          --deployment-group-name deploy-group
          --s3-location bucket=teamcc-bucket,key=Deploy_CICD/build-docker.zip,bundleType=zip
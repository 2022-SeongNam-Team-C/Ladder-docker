version: "3"

services:
  frontend:
    container_name: ladder-frontend
    build:
      context: ./Ladder-Frontend
    ports:
      - 8080:80
    volumes:
      - frontend:/var/lib/frontend/data

  backend:
    restart: unless-stopped
    container_name: ladder-backend
    build:
      context: ./Ladder-Backend
    ports:
      - 5123:5123
    volumes:
      - backend:/var/lib/backend/data
    environment:
      FLASK_DEBUG: 1 
    command: gunicorn -w 1 -b 0.0.0.0:5123 app:app --reload

  postgres:
    container_name: ladderdb
    image: postgres:latest
    ports:
      - 5432:5432
    environment:
      - POSTGRES_DB=${PG_DB}
      - POSTGRES_USER=${PG_USER}
      - POSTGRES_PASSWORD=${PG_PASSWORD}
    volumes:
        - postgres:/var/lib/postgres

  pgadmin:
    container_name: ladder-pgadmin
    image: dpage/pgadmin4
    ports:
      - 8088:80
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PG_ADMIN_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8

  ai:
    container_name: ladder-ai
    build: 
      context: ./Ladder-AI
    ports:
      - 5000:5000
    environment:
      FLASK_DEBUG: 1 
    volumes:
      - ai:/var/lib/ai/data

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    container_name: ladder-prometheus
    ports:
      - 9090:9090
    networks:
      - promnet

  grafana:
    image: grafana/grafana
    container_name: ladder-grafana
    ports:
      - 3001:3001
    # volumes:
    #  - ./grafana/grafana-volume:/var/lib/grafana
    networks:
      - promnet

  redis-db:
    image: redis:latest
    volumes:
      - redis:/val/lib/redis/data
    ports:
      - "6379:6379"

networks:
  promnet:
    driver: bridge    
      
volumes:
    postgres:
    frontend:
    backend:
    ai:
    redis:


